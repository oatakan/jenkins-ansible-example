- hosts: all

  tasks:
    - name: enable ansible tower plugin
      jenkins_plugin:
        name: ansible-tower
        state: latest
        url_username: admin
        url_password: admin
        validate_certs: no
      register: jenkins_tower_plugin

    - name: Initiate the fact
      set_fact:
        jenkins_restart_required: no

    - name: Check if restart is required
      set_fact:
        jenkins_restart_required: yes
      when: jenkins_tower_plugin.changed

    - name: Restart Jenkins if required
      service:
        name: jenkins
        state: restarted
      when: jenkins_restart_required

    - name: Wait for Jenkins to start up
      uri:
        url: http://localhost:8080
        status_code: 200
        timeout: 5
      register: jenkins_service_status
      # Keep trying for 5 mins in 5 sec intervals
      retries: 60
      delay: 5
      until: >
        'status' in jenkins_service_status and
        jenkins_service_status['status'] == 200
      when: jenkins_restart_required

    - name: Reset the fact
      set_fact:
        jenkins_restart_required: no
      when: jenkins_restart_required

#    - name: create credential
#      uri:
#        url: https://localhost/api/v1/config/
#        method: POST
#        user: admin
#        password: "{{ towerpass }}"
#        body: "{{ tower_license }}"
#        body_format: json
#        validate_certs: False
#        force_basic_auth: yes
#      ignore_errors: True
#
#
#curl -X POST \
# https://jenkins.local/job/TEAM-FOLDER/credentials/store/folder/domain/_/createCredentials \
# -F secret=@/Users/maksym/secret \
# -F 'json={"": "4", "credentials": {"file": "secret", "id": "test",
#"description": "HELLO-curl", "stapler-class":
#"org.jenkinsci.plugins.plaincredentials.impl.FileCredentialsImpl",
#"$class":
#"org.jenkinsci.plugins.plaincredentials.impl.FileCredentialsImpl"}}'