---
- name: remove Jenkins instances
  hosts: all
  gather_facts: false
  connection: local
  vars:
    ansible_ssh_password: ""
  become: false
  vars_files:
    - node-config/nodes-ec2.yml

  pre_tasks:
    - name: get ec2 instance information
      amazon.aws.ec2_instance_info:
        region: "{{ ec2_region }}"
        filters:
          vpc-id: "{{ ec2_vpc_id }}"
          "tag:app": jenkins_tower_demo
      register: ec2_instances
      delegate_to: localhost

    - name: get record for router DNS entry
      community.aws.route53:
        command: get
        zone: "{{ hosted_zone_domain_name }}"
        record: "{{ subdomain | default(ec2_instances.instances[0].tags.role | lower) | default('jenkins') }}.{{ ec2_name_prefix | lower }}.{{ hosted_zone_domain_name
          }}"
        type: A
      register: routerelbrec
      when: hosted_zone_domain_name is defined and ec2_name_prefix is defined
      delegate_to: localhost

    - name: delete DNS entry if it exists
      community.aws.route53:
        state: absent
        zone: "{{ hosted_zone_domain_name }}"
        record: "{{ subdomain | default(ec2_instances.instances[0].tags.role | lower) | default('jenkins') }}.{{ ec2_name_prefix | lower }}.{{ hosted_zone_domain_name
          }}"
        type: A
        value: "{{ routerelbrec.set.value }}"
      when: routerelbrec.set is defined and "{} != routerelbrec.set" and routerelbrec.set.record is defined
      delegate_to: localhost
  roles:
    - role: ansible-role-ec2
      role_action: deprovision
      delegate_to: localhost
      run_once: true
